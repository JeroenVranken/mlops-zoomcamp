name: CI Tests

on:
    pull_request:
        branches:
            - 'develop'
        paths:
            - '06-best-practices/**'


env:
  AWS_DEFAULT_REGION: 'eu-west-3'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Ensure build tools
        run: |
            python -m ensurepip --upgrade
            python -m pip install --upgrade setuptools
      
      #     python -m pip install pip==21.3.1
      #     pip install setuptools==57.5.0
      #     pip install pipenv      
      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        working-directory: "06-best-practices/B_Infrastructure_as_code/code"
        run: |
          # Remove any existing virtualenv to avoid cached Python 3.12 builds
          pipenv --rm || true
          # Ensure Pipenv creates venv for Python 3.9
          pipenv install --dev --deploy --python 3.9

      - name: Run Unit tests
        working-directory: "06-best-practices/B_Infrastructure_as_code/code"
        run: pipenv run pytest tests/

      - name: Lint
        working-directory: "06-best-practices/B_Infrastructure_as_code/code"
        run: pipenv run pylint --recursive=y .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Integration Test
        working-directory: "06-best-practices/B_Infrastructure_as_code/code/integration-test"
        run: |
          . run.sh


  tf-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: hashicorp/setup-terraform@v2

      - name: TF plan
        id: plan
        working-directory: '06-best-practices/B_Infrastructure_as_code/infrastructure'
        run: |
          terraform init -backend-config="key=mlops-zoomcamp-prod.tfstate" --reconfigure && terraform plan --var-file vars/prod.tfvars